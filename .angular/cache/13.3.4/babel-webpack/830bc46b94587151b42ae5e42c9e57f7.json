{"ast":null,"code":"import { of } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { map, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    Register(usuario) {\n      return this.http.post(`${environment.baseUrl}/register`, usuario).pipe(tap(resp => {\n        if (resp != 0 && resp != 1) sessionStorage.setItem('u', resp.usuario);\n      }), tap(resp => {\n        if (resp != 0 && resp != 1) sessionStorage.setItem('t', resp.token);\n      }));\n    }\n\n    Login(usuario) {\n      return this.http.post(`${environment.baseUrl}/login`, usuario).pipe(tap(resp => {\n        if (resp != 0) {\n          sessionStorage.setItem('u', resp.usuario);\n        }\n      }), tap(resp => {\n        if (resp != 0) {\n          sessionStorage.setItem('t', resp.token);\n        }\n      }));\n    }\n\n    Logout() {\n      sessionStorage.removeItem('u');\n      sessionStorage.removeItem('t');\n    }\n\n    verifToken(token) {\n      if (!sessionStorage.getItem('t')) {\n        return of(false);\n      }\n\n      return this.http.get(`${environment.baseUrl}/verifToken/${token}`).pipe(tap(resp => {\n        if (resp != null) {\n          sessionStorage.setItem('u', resp.usuario);\n          sessionStorage.setItem('t', resp.token);\n        }\n      }), map(resp => {\n        return true;\n      }));\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}