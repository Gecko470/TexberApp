{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/texber.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\n\nfunction ListaProveedoresComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r2.codigoCliente);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", item_r2.razonSocial, \" \");\n  }\n}\n\nfunction ListaProveedoresComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \" Camp obligatori \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a1) {\n  return [\"../gestionNota\", a1];\n};\n\nexport let ListaProveedoresComponent = /*#__PURE__*/(() => {\n  class ListaProveedoresComponent {\n    constructor(texberSevice, fb) {\n      this.texberSevice = texberSevice;\n      this.fb = fb;\n      this.listaClientes = [];\n      this.clienteSeleccionado = {\n        codigoCliente: '',\n        siglaNacion: '',\n        cifDni: '',\n        cifEuropeo: '',\n        codigoProveedor: '',\n        codigoContable: '',\n        codigoCategoriaCliente: '',\n        razonSocial: '',\n        nombre: '',\n        domicilio: '',\n        codigoSigla: '',\n        viaPublica: '',\n        numero1: '',\n        codigoPostal: '',\n        codigoMunicipio: '',\n        municipio: '',\n        codigoProvincia: '',\n        provincia: '',\n        codigoNacion: '',\n        nacion: '',\n        telefono: '',\n        cuentaProvision: '',\n        idCliente: ''\n      };\n      this.myForm = this.fb.group({\n        codigoCliente: ['0', [Validators.required]]\n      });\n    }\n\n    ngOnInit() {\n      this.texberSevice.getClientes().subscribe(resp => this.listaClientes = resp);\n    }\n\n    campoEsValido(campo) {\n      return this.myForm.controls[campo].value == '0';\n    }\n\n    seleccionarCliente() {\n      this.texberSevice.getClienteByCod(this.myForm.controls['codigoCliente'].value).subscribe(resp => this.clienteSeleccionado = resp);\n    }\n\n  }\n\n  ListaProveedoresComponent.ɵfac = function ListaProveedoresComponent_Factory(t) {\n    return new (t || ListaProveedoresComponent)(i0.ɵɵdirectiveInject(i1.TexberService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  ListaProveedoresComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListaProveedoresComponent,\n    selectors: [[\"app-entradas\"]],\n    decls: 23,\n    vars: 7,\n    consts: [[1, \"container\", \"mx-auto\", \"mt-5\"], [1, \"col-md-6\", \"my-5\", \"mx-auto\", 2, \"height\", \"90vh\"], [1, \"mt-5\"], [3, \"formGroup\", \"change\"], [1, \"form-group\", \"my-4\"], [1, \"col-form-label\"], [\"formControlName\", \"codigoCliente\", 1, \"form-select\"], [\"value\", \"0\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [2, \"height\", \"70%\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"btn\", \"btn-transparent\", 3, \"disabled\"], [1, \"text-success\", \"fs-1\", \"fw-bold\", 3, \"routerLink\"], [1, \"bi\", \"bi-check-circle\"], [1, \"btn\", \"btn-transparent\"], [\"routerLink\", \"../../home\", 1, \"text-danger\", \"fs-1\", \"fw-bold\"], [1, \"bi\", \"bi-x-circle\"], [3, \"value\"], [1, \"form-text\", \"text-danger\"]],\n    template: function ListaProveedoresComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n        i0.ɵɵtext(4, \"Llista de prove\\u00EFdors\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\")(6, \"form\", 3);\n        i0.ɵɵlistener(\"change\", function ListaProveedoresComponent_Template_form_change_6_listener() {\n          return ctx.seleccionarCliente();\n        });\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 5);\n        i0.ɵɵtext(9, \"Prove\\u00EFdors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"select\", 6)(11, \"option\", 7);\n        i0.ɵɵtext(12, \"Seleccioneu\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, ListaProveedoresComponent_option_13_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, ListaProveedoresComponent_span_14_Template, 2, 0, \"span\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(15, \"div\", 10);\n        i0.ɵɵelementStart(16, \"div\", 11)(17, \"button\", 12)(18, \"a\", 13);\n        i0.ɵɵelement(19, \"i\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"button\", 15)(21, \"a\", 16);\n        i0.ɵɵelement(22, \"i\", 17);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listaClientes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.campoEsValido(\"codigoCliente\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.campoEsValido(\"codigoCliente\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c0, ctx.clienteSeleccionado.codigoCliente));\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.FormControlName, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i3.NgForOf, i3.NgIf, i4.RouterLinkWithHref],\n    styles: [\"li[_ngcontent-%COMP%]{cursor:pointer}\"]\n  });\n  return ListaProveedoresComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}