{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n\n    canActivate(route, state) {\n      /* if(this.authService.Auth.token == localStorage.getItem('t')){\r\n        return true;\r\n      }\r\n      \r\n      return false; */\n      return this.authService.verifToken(localStorage.getItem(\"t\") || \"\").pipe(tap(resp => {\n        if (!resp) {\n          this.router.navigate(['']);\n        }\n      }));\n    }\n\n    canLoad(route, segments) {\n      /* if(this.authService.Auth.token == localStorage.getItem('t')){\r\n        return true;\r\n      }\r\n      \r\n      return false; */\n      return this.authService.verifToken(localStorage.getItem(\"t\") || \"\").pipe(tap(resp => {\n        if (!resp) {\n          this.router.navigate(['']);\n        }\n      }));\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}